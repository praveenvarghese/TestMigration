/*!
 * @AIMMS_FILE=models/webui-e2e-customer-models/models/Lineas_IBP_Model_2021-04-16/Lineas IBP.aimms
 * @HARDWARE_SHARE=large
 */

scenario("Validate functionality of MBR cost page Test", () => {
	loadPage("Main Project/Startup/Start-up");

	findWidget("start-up_1")
		.getVisibleWidgets()
		.should.eql([
			"SC_DaysTillDeadline",
			"BU_ReloadData",
			"BU_HandShakeSummary",
			"BU_CompleteHandshake",
			"BU_StartNewCycle",
			"SC_CurrentCycleInformation",
			"TB_UpcomingCycles",
		]);

	findWidget("BU_HandShakeSummary").click();

	findWidget("new_grid_page_1")
		.getVisibleWidgets()
		.should.eql(["BL_LocsOverviewPerWeek", "LG_LocsOverviewLegend", "TB_LocsSupply_3"]);

	getPageMenu().navigateToPage("Main Project/MBR/Cost");

	findWidget("cost_1")
		.getVisibleWidgets()
		.should.eql([
			"BC_CostPerLoctype",
			"LG_LocsOverviewLegend_1",
			"TB_CostsPerLocType",
			"TB_CostPerLoctype",
		]);

	getStatusBar()
		.getStatusBarMessages()
		.should.beEqualTo([
			{ HeaderText: "Model settings", Icon: "aimms-cogs", MessageText: " ", State: "active" },
			{
				HeaderText: "Months to show",
				Icon: "aimms-calendar",
				MessageText: " ",
				State: "active",
			},
			{
				HeaderText: "Current Scenario",
				Icon: "aimms-briefcase",
				MessageText: "Live Plan",
				State: "active",
			},
			{
				HeaderText: "Create Scenario",
				Icon: "aimms-file-plus",
				MessageText: " ",
				State: "active",
			},
			{ HeaderText: "Delete Scenario", Icon: "aimms-bin", MessageText: " ", State: "active" },
			{
				HeaderText: "Save current scenario to database",
				Icon: "aimms-database",
				MessageText: " ",
				State: "active",
			},
			{
				HeaderText: "Filters active",
				Icon: "aimms-filter",
				MessageText: "No",
				State: "active",
			},
			{ HeaderText: "Reset filters", Icon: "aimms-reset", MessageText: " ", State: "active" },
		]);

	findWidget("BC_CostPerLoctype")
		.getNumberOfBars()
		.should.be.equal(32);

	findWidget("TB_CostsPerLocType")
		.getGridValues()
		.should.be.shallowDeepEqual([
			[
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
			],
			[
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
			],
			[
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
			],
			[
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
			],
			[
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"39,550",
				"39,550",
				"39,550",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
			[
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"39,550",
				"39,550",
				"39,550",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
			[
				"62,388",
				"62,388",
				"62,388",
				"62,388",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
			],
			[
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
			],
			[
				"31,194",
				"31,194",
				"31,194",
				"31,194",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
			[
				"1,449,848",
				"1,410,663",
				"1,332,293",
				"1,332,293",
				"1,371,478",
				"1,410,663",
				"1,410,663",
				"1,410,663",
				"1,410,663",
				"1,410,663",
				"1,449,848",
				"1,410,663",
				"1,371,478",
				"1,371,478",
				"1,410,663",
				"1,410,663",
			],
			[
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
			],
			[
				"117,555",
				"156,740",
				"235,110",
				"235,110",
				"195,925",
				"156,740",
				"156,740",
				"156,740",
				"156,740",
				"156,740",
				"117,555",
				"156,740",
				"195,925",
				"195,925",
				"156,740",
				"156,740",
			],
			[
				"1,406,910",
				"1,520,984",
				"1,520,984",
				"1,520,984",
				"1,559,008",
				"1,597,033",
				"1,597,033",
				"1,597,033",
				"1,597,033",
				"1,597,033",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
			],
			[
				"1,444,934",
				"1,559,008",
				"1,559,008",
				"1,559,008",
				"1,597,033",
				"1,635,057",
				"1,635,057",
				"1,635,057",
				"1,635,057",
				"1,635,057",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
			],
			[
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
		]);

	findWidget("cost_1")
		.getSidepanels()
		.getTabDisplayName()
		.should.eql("Resource");

	findWidget("cost_1")
		.getSidepanels()
		.openSidepanelTab("Resource");

	findWidget("MS_Lostype").selectNone();

	findWidget("cost_1")
		.getSidepanels()
		.closeSidepanelTab();

	findWidget("TB_CostsPerLocType").getEmptyWidgetMessage().should.exist;

	findWidget("BC_CostPerLoctype").getEmptyWidgetMessage().should.exist;

	findWidget("cost_1")
		.getSidepanels()
		.openSidepanelTab("Resource");

	findWidget("MS_Lostype").selectAll();

	findWidget("cost_1")
		.getSidepanels()
		.closeSidepanelTab();

	findWidget("BC_CostPerLoctype")
		.getNumberOfBars()
		.should.be.equal(32);

	findWidget("TB_CostsPerLocType")
		.getGridValues()
		.should.be.shallowDeepEqual([
			[
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
			],
			[
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
				"490,481",
			],
			[
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
			],
			[
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
				"810,859",
			],
			[
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"39,550",
				"39,550",
				"39,550",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
			[
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"79,100",
				"39,550",
				"39,550",
				"39,550",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
			[
				"62,388",
				"62,388",
				"62,388",
				"62,388",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
			],
			[
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
				"93,583",
			],
			[
				"31,194",
				"31,194",
				"31,194",
				"31,194",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
			[
				"1,449,848",
				"1,410,663",
				"1,332,293",
				"1,332,293",
				"1,371,478",
				"1,410,663",
				"1,410,663",
				"1,410,663",
				"1,410,663",
				"1,410,663",
				"1,449,848",
				"1,410,663",
				"1,371,478",
				"1,371,478",
				"1,410,663",
				"1,410,663",
			],
			[
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
				"1,567,403",
			],
			[
				"117,555",
				"156,740",
				"235,110",
				"235,110",
				"195,925",
				"156,740",
				"156,740",
				"156,740",
				"156,740",
				"156,740",
				"117,555",
				"156,740",
				"195,925",
				"195,925",
				"156,740",
				"156,740",
			],
			[
				"1,406,910",
				"1,520,984",
				"1,520,984",
				"1,520,984",
				"1,559,008",
				"1,597,033",
				"1,597,033",
				"1,597,033",
				"1,597,033",
				"1,597,033",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
			],
			[
				"1,444,934",
				"1,559,008",
				"1,559,008",
				"1,559,008",
				"1,597,033",
				"1,635,057",
				"1,635,057",
				"1,635,057",
				"1,635,057",
				"1,635,057",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
				"1,444,934",
			],
			[
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"38,025",
				"0",
				"0",
				"0",
				"0",
				"0",
				"0",
			],
		]);
});
