/*!
 * @AIMMS_FILE=models/BooksAndAuthors/TableFilteringTest.aimms
 */

scenario("Adding multiple filter rules on data headers, and asserting the resulting data", () => {
	loadPage("Main Project/Filters");

	// Adding a "is" rule on "Cities" data header
	findWidget("ProfitWithDiscountsGiven").getDataHeaderFilter(3, 0);
	getFilter().addFilter({ rule: "is", itemsSearched: ["City 01"], isHeaderRule: true });

	// Apply the filter rule and get the dialog closed
	findDialog()
		.findButton("Apply and Close")
		.click();

	// Assert the resulting data
	let expected_values = [
		[
			"166.87",
			"200.28",
			"373.02",
			"159.04",
			"103.49",
			"10.57",
			"485.63",
			"106.06",
			"407.51",
			"438.66",
			"128.91",
			"496.28",
			"339.07",
			"413.38",
			"272.32",
			"210.58",
			"8.24",
			"411.89",
			"268.87",
			"2.67",
			"259.08",
			"466.68",
			"365.78",
			"36.97",
			"422.26",
			"212.28",
			"359.92",
			"320.11",
			"241.77",
			"66.06",
		],
		[
			"108.99",
			"58.63",
			"78.23",
			"246.30",
			"213.86",
			"416.83",
			"308.29",
			"303.49",
			"358.67",
			"88.12",
			"85.28",
			"241.57",
			"474.71",
			"204.84",
			"62.19",
			"39.96",
			"25.10",
			"472.40",
			"321.97",
			"54.05",
			"408.40",
			"319.69",
			"2.49",
			"251.86",
			"362.82",
			"51.09",
			"290.31",
			"192.74",
			"54.27",
			"420.48",
		],
		[
			"29.15",
			"27.11",
			"410.48",
			"78.06",
			"112.70",
			"352.31",
			"133.10",
			"37.19",
			"269.32",
			"468.20",
			"233.71",
			"186.31",
			"243.18",
			"367.56",
			"55.94",
			"130.63",
			"204.30",
			"287.30",
			"276.22",
			"21.42",
			"421.07",
			"70.67",
			"80.31",
			"390.65",
			"127.04",
			"454.05",
			"248.50",
			"397.28",
			"415.90",
			"114.43",
		],
		[
			"223.19",
			"190.95",
			"140.83",
			"318.80",
			"330.24",
			"140.53",
			"322.29",
			"479.29",
			"105.65",
			"87.16",
			"483.38",
			"273.36",
			"263.38",
			"50.74",
			"78.66",
			"384.48",
			"393.34",
			"296.84",
			"66.85",
			"223.94",
			"153.17",
			"258.40",
			"201.23",
			"77.04",
			"8.18",
			"439.42",
			"254.56",
			"176.73",
			"375.07",
			"238.76",
		],
		[
			"378.16",
			"217.42",
			"42.60",
			"295.03",
			"86.66",
			"290.03",
			"10.54",
			"307.27",
			"378.02",
			"380.12",
			"499.33",
			"290.44",
			"93.41",
			"318.57",
			"287.45",
			"444.46",
			"271.53",
			"451.73",
			"10.43",
			"40.21",
			"236.43",
			"177.97",
			"342.12",
			"111.25",
			"110.88",
			"147.16",
			"142.66",
			"161.73",
			"423.77",
			"131.49",
		],
		[
			"110.78",
			"284.02",
			"132.58",
			"433.43",
			"462.48",
			"264.45",
			"115.38",
			"75.38",
			"359.33",
			"289.30",
			"172.46",
			"349.31",
			"100.09",
			"202.70",
			"273.84",
			"27.25",
			"247.07",
			"81.82",
			"98.22",
			"111.26",
			"157.97",
			"26.50",
			"301.17",
			"433.46",
			"168.12",
			"156.84",
			"315.86",
			"461.88",
			"398.45",
			"450.29",
		],
		[
			"444.33",
			"104.84",
			"366.31",
			"129.19",
			"207.89",
			"294.28",
			"280.87",
			"247.78",
			"440.16",
			"111.68",
			"76.32",
			"283.52",
			"497.17",
			"236.89",
			"329.76",
			"49.23",
			"10.41",
			"278.74",
			"126.20",
			"492.74",
			"15.43",
			"296.19",
			"151.38",
			"13.38",
			"284.73",
			"338.89",
			"446.79",
			"67.73",
			"373.20",
			"32.71",
		],
		[
			"132.38",
			"180.51",
			"421.35",
			"472.68",
			"110.78",
			"150.42",
			"2.20",
			"269.25",
			"443.50",
			"320.36",
			"247.49",
			"325.39",
			"241.76",
			"233.14",
			"384.07",
			"82.88",
			"373.93",
			"25.56",
			"58.30",
			"108.88",
			"453.68",
			"379.27",
			"174.47",
			"158.19",
			"155.74",
			"243.58",
			"304.29",
			"216.59",
			"99.50",
			"227.35",
		],
		[
			"326.80",
			"260.07",
			"478.66",
			"351.12",
			"238.92",
			"108.97",
			"229.51",
			"245.59",
			"212.23",
			"483.59",
			"31.04",
			"16.94",
			"264.41",
			"186.39",
			"332.74",
			"200.00",
			"79.49",
			"26.92",
			"302.93",
			"371.94",
			"478.49",
			"298.39",
			"268.42",
			"37.57",
			"424.98",
			"149.69",
			"72.15",
			"421.97",
			"67.59",
			"212.42",
		],
	];
	findWidget("ProfitWithDiscountsGiven")
		.getGridValues()
		.should.be.shallowDeepEqual(expected_values);

	// Adding another "is not" rule on "Products" data header
	findWidget("ProfitWithDiscountsGiven").getDataHeaderFilter(1, 1);
	getFilter().addFilter({
		rule: "is not",
		itemsSearched: [
			"Product 01",
			"Product 02",
			"Product 03",
			"Product 04",
			"Product 05",
			"Product 06",
			"Product 07",
			"Product 08",
		],
		isHeaderRule: true,
	});

	// Apply the filter rules and get the dialog closed
	findDialog()
		.findButton("Apply and Close")
		.click();

	// Assert the resulting data
	expected_values = [
		[
			"394.84",
			"354.34",
			"86.06",
			"496.40",
			"97.13",
			"16.48",
			"153.74",
			"236.09",
			"119.93",
			"118.31",
			"204.10",
			"164.18",
			"155.88",
			"391.82",
			"325.49",
			"283.01",
			"428.62",
			"372.02",
			"75.73",
			"492.16",
			"320.06",
			"303.42",
			"251.98",
			"499.37",
			"16.41",
			"489.68",
			"241.50",
			"378.75",
			"217.48",
			"242.77",
		],
		[
			"116.23",
			"213.74",
			"338.83",
			"152.77",
			"283.02",
			"346.88",
			"178.75",
			"456.35",
			"113.86",
			"42.36",
			"91.45",
			"441.12",
			"340.40",
			"226.89",
			"178.59",
			"268.28",
			"98.73",
			"243.39",
			"182.68",
			"221.16",
			"40.59",
			"300.33",
			"137.10",
			"271.14",
			"420.53",
			"488.65",
			"184.61",
			"169.07",
			"365.68",
			"192.81",
		],
		[
			"126.85",
			"429.17",
			"441.95",
			"458.97",
			"142.64",
			"224.07",
			"307.54",
			"290.55",
			"456.72",
			"73.25",
			"107.84",
			"3.82",
			"484.45",
			"398.90",
			"58.80",
			"117.86",
			"201.50",
			"132.83",
			"58.49",
			"302.21",
			"226.68",
			"293.36",
			"299.95",
			"204.97",
			"87.68",
			"473.31",
			"57.66",
			"204.85",
			"162.73",
			"324.77",
		],
		[
			"204.49",
			"46.96",
			"108.39",
			"107.25",
			"424.32",
			"319.96",
			"491.05",
			"87.42",
			"230.71",
			"230.43",
			"260.65",
			"230.65",
			"124.51",
			"390.29",
			"33.91",
			"292.53",
			"60.28",
			"191.51",
			"472.98",
			"93.34",
			"288.30",
			"104.00",
			"239.31",
			"363.57",
			"412.12",
			"72.67",
			"1.93",
			"408.36",
			"31.05",
			"372.52",
		],
		[
			"273.09",
			"441.76",
			"174.01",
			"124.36",
			"459.10",
			"316.66",
			"311.41",
			"328.20",
			"478.04",
			"23.05",
			"42.95",
			"141.72",
			"392.66",
			"259.71",
			"268.94",
			"199.63",
			"493.42",
			"313.54",
			"45.54",
			"461.76",
			"169.38",
			"492.02",
			"52.92",
			"313.28",
			"363.59",
			"103.79",
			"298.71",
			"201.10",
			"468.94",
			"42.79",
		],
		[
			"322.01",
			"282.95",
			"13.82",
			"386.60",
			"184.40",
			"185.43",
			"24.07",
			"394.96",
			"133.01",
			"312.67",
			"76.35",
			"368.66",
			"244.24",
			"108.91",
			"246.73",
			"90.48",
			"152.17",
			"218.81",
			"311.21",
			"11.09",
			"98.63",
			"384.23",
			"476.99",
			"254.92",
			"59.50",
			"116.17",
			"154.11",
			"447.52",
			"129.87",
			"142.81",
		],
		[
			"307.93",
			"161.79",
			"404.78",
			"268.07",
			"435.69",
			"131.08",
			"72.76",
			"260.23",
			"50.07",
			"238.66",
			"373.62",
			"140.32",
			"202.42",
			"493.44",
			"62.42",
			"147.45",
			"157.08",
			"301.83",
			"348.38",
			"158.09",
			"17.76",
			"255.39",
			"183.42",
			"172.55",
			"411.22",
			"450.26",
			"396.59",
			"60.40",
			"36.04",
			"305.37",
		],
		[
			"417.74",
			"274.55",
			"161.00",
			"397.06",
			"141.15",
			"58.09",
			"79.78",
			"346.44",
			"420.42",
			"61.29",
			"260.58",
			"484.59",
			"281.95",
			"390.60",
			"49.44",
			"276.62",
			"309.14",
			"356.20",
			"342.82",
			"495.08",
			"94.04",
			"388.82",
			"236.66",
			"147.35",
			"2.27",
			"229.86",
			"166.23",
			"411.79",
			"149.63",
			"185.38",
		],
		[
			"499.60",
			"306.22",
			"433.24",
			"256.29",
			"478.26",
			"435.74",
			"368.29",
			"345.04",
			"50.99",
			"50.06",
			"229.99",
			"183.04",
			"336.55",
			"372.91",
			"108.84",
			"402.71",
			"298.89",
			"349.22",
			"498.26",
			"101.97",
			"327.26",
			"139.16",
			"67.25",
			"8.27",
			"425.65",
			"120.36",
			"162.73",
			"127.76",
			"191.87",
			"402.73",
		],
	];
	findWidget("ProfitWithDiscountsGiven")
		.getGridValues()
		.should.be.shallowDeepEqual(expected_values);

	// Adding another "contains" rule on "Profit_Margin" data header
	findWidget("ProfitWithDiscountsGiven").getDataHeaderFilter(2, 1);
	getFilter().addFilter({ rule: "contains", value: "20", isHeaderRule: true });

	// Apply the filter rules and get the dialog closed
	findDialog()
		.findButton("Apply and Close")
		.click();

	// Assert the resulting data
	expected_values = [
		["86.06", "320.06"],
		["338.83", "40.59"],
		["441.95", "226.68"],
		["108.39", "288.30"],
		["174.01", "169.38"],
		["13.82", "98.63"],
		["404.78", "17.76"],
		["161.00", "94.04"],
		["433.24", "327.26"],
	];
	findWidget("ProfitWithDiscountsGiven")
		.getGridValues()
		.should.be.shallowDeepEqual(expected_values);

	// Adding another "does not contain" rule on "Discounts" data header
	findWidget("ProfitWithDiscountsGiven").getDataHeaderFilter(3, 1);
	getFilter().addFilter({ rule: "does not contain", value: "20", isHeaderRule: true });

	// Apply the filter rules and get the dialog closed
	findDialog()
		.findButton("Apply and Close")
		.click();

	// Assert the resulting data
	expected_values = [
		["86.06", "320.06"],
		["338.83", "40.59"],
		["441.95", "226.68"],
		["108.39", "288.30"],
		["174.01", "169.38"],
		["404.78", "17.76"],
		["161.00", "94.04"],
		["433.24", "327.26"],
	];
	findWidget("ProfitWithDiscountsGiven")
		.getGridValues()
		.should.be.shallowDeepEqual(expected_values);
});
